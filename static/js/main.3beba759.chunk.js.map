{"version":3,"sources":["assets/image/aman.jpg","assets/image/coding-bg.png","assets/image/spinner.gif","components/Nav.js","firestore.js","components/Projects.js","components/Home.js","components/spinner.js","components/livedemo.js","App.js","actions/projects.js","actions/types.js","serviceWorker.js","reducers/projects.js","reducers/index.js","store.js","index.js"],"names":["module","exports","Nav","useState","isOpen","setisOpen","window","innerWidth","width","setwidth","locat","useLocation","pathname","includes","updateWidth","useEffect","addEventListener","removeEventListener","isMenu","className","onClick","path","mdiMenu","title","size","mdiCloseCircle","to","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","connect","state","projects","project","map","doc","key","id","src","image","alt","name","paragraph","href","github","Home","style","backgroundImage","codeimage","theman","mdiEmail","mdiLinkedin","mdiGithub","spinner","setSpinner","history","useHistory","pid","useParams","projid","find","proj","onLoad","location","Icon","mdiCloseCircleOutline","push","getProjects","dispatch","a","collection","orderBy","get","subscribe","data","docs","rdata","reverse","type","payload","console","log","exact","Boolean","hostname","match","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3beba759.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aman.efd27daa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coding-bg.1cb86b02.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.42a5ba6f.gif\";","import React, { useState, useEffect } from 'react';\r\nimport Icon from '@mdi/react';\r\nimport { mdiMenu, mdiCloseCircle } from '@mdi/js';\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nconst Nav = () => {\r\n  const [isOpen, setisOpen] = useState(false);\r\n  const [width, setwidth] = useState(window.innerWidth);\r\n\r\n  const Location = useLocation()\r\n\r\n  const res = Location.pathname\r\n\r\n  const locat = res.includes(\"/livedemo/\")\r\n\r\n  const updateWidth = () => {\r\n    setwidth(window.innerWidth);\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', updateWidth);\r\n    if (width < 1024) {\r\n      setisOpen(true);\r\n    }\r\n    return () => window.removeEventListener('resize', updateWidth);\r\n  }, [width]);\r\n\r\n  const isMenu = () => {\r\n    setisOpen(!isOpen);\r\n  };\r\n\r\n  if (!locat) {\r\n  return (\r\n    <div>\r\n      <div className='fixed text-white p-2 h-12 w-full bg-black lg:flex items-center lg:justify-between z-50'>\r\n        <div className='flex justify-between items-center'>\r\n          <div>Ronald Portfolio</div>\r\n          {isOpen ? (\r\n            <button className='lg:hidden' onClick={isMenu}>\r\n              <Icon path={mdiMenu} title='menuIcon' size={1} />\r\n            </button>\r\n          ) : (\r\n            <button className='lg:hidden' onClick={isMenu}>\r\n              <Icon path={mdiCloseCircle} title='closeIcon' size={1} />\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            !isOpen\r\n              ? 'block bg-black lg:flex lg:justify-between lg:items-center'\r\n              : 'hidden lg:flex lg:justify-between lg:items-center'\r\n          }\r\n        >\r\n          <Link to='/' onClick={() => setisOpen(!isOpen)} className='block p-3 hover:text-indigo-600'>\r\n            Home\r\n          </Link>\r\n          <Link to='/projects' onClick={() => setisOpen(!isOpen)} className='block p-3 hover:text-indigo-600'>\r\n            Projects\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  } else {\r\n    return null\r\n  }\r\n};\r\n\r\n\r\nexport default Nav","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyClqlVbnlx1V4Se7sj5DmfrPd_7NW0uNpQ',\r\n  authDomain: 'portfolio-c6881.firebaseapp.com',\r\n  databaseURL: 'https://portfolio-c6881.firebaseio.com',\r\n  projectId: 'portfolio-c6881',\r\n  storageBucket: 'portfolio-c6881.appspot.com',\r\n  messagingSenderId: '36642616277',\r\n  appId: '1:36642616277:web:3836d5a08908b8a424035c',\r\n};\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport const db = firebase.firestore()\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Projects = ({projects}) => {\r\n\r\n    return (\r\n      <div className='bg-orange-200'>\r\n        <div className='text-center text-black text-5xl pt-16'>Projects</div>\r\n        <div className='px-4 lg:px-24 text-center text-2xl text-black'>The Red Close button on lower right side in the LiveDemo Page, will take you back to this page.</div>\r\n        <div className='flex flex-row flex-wrap px-6 justify-between'>\r\n          {projects.map((doc) => (\r\n            <div className='text-black py-6 px-6' key={doc.id}>\r\n              <div className='max-w-sm rounded overflow-hidden shadow-lg'>\r\n                <img\r\n                  className='w-full'\r\n                  src={doc.image}\r\n                  alt='Sunset in the mountains'\r\n                />\r\n                <div className='px-6 py-4 bg-white'>\r\n                  <div className='font-bold text-xl mb-2'>{doc.name}</div>\r\n                  <p className='lg:h-32 text-gray-700 text-base'>\r\n                    {doc.paragraph}\r\n                  </p>\r\n                </div>\r\n                <div className='flex justify-between px-6 py-4 bg-white'>\r\n                  <Link to={`/livedemo/${doc.id}`} className='inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2'>\r\n                    Live Demo\r\n                  </Link>\r\n                  <a href={doc.github} className='inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700'>\r\n                    Github\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nProjects.propTypes = {\r\nprojects: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    projects: state.projects.project\r\n})\r\n\r\nexport default connect(mapStateToProps)(Projects)\r\n","import React from 'react'\r\nimport Icon from '@mdi/react'\r\nimport { mdiEmail, mdiLinkedin, mdiGithub } from '@mdi/js';\r\nimport theman from '../assets/image/aman.jpg'\r\nimport codeimage from '../assets/image/coding-bg.png';\r\n\r\n\r\nexport const Home = () => {\r\n\r\n    return (\r\n      <div\r\n        className='text-white h-full lg:min-h-screen bg-fixed'\r\n        style={{ backgroundImage: `url(${codeimage}) ` }}\r\n      >\r\n        <div className='w-screen h-full md:h-screen lg:h-full bg-scroll lg:w-1/2 opacity-75 bg-black lg:float-right flex-row justify-center items-center'>\r\n          <div className='flex justify-center items-center relative pt-12'>\r\n            <img\r\n              className='h-48 w-48 lg:hidden rounded-full border-orange-900 border-4'\r\n              src={theman}\r\n              alt='theman'\r\n            />\r\n          </div>\r\n          <div className='p-12 lg:pt-24 lg:pb-12 lg:px-12 text-3xl lg:text-5xl'>\r\n            My name is <b>Ronald</b> and I'm a web Developer\r\n          </div>\r\n          <p className='lg:text-lg px-12'>\r\n            I am passionate about technology and the web. I remember when Amazon\r\n            first started out just selling books online and now Amazon is within\r\n            the top 5 companies in the world. I also remember the battle of\r\n            Microsoft Explorer and Netscape browser. I am excited to see what\r\n            another twenty years will bring. <br />\r\n            <br />I am also a nerd at heart. I love sci-fi, and anime. Some of\r\n            my favorite shows are The Flash, The Expanse, Star Wars, Star Trek,\r\n            Tenchi Muyo! War on Geminar, and The Rise of the Shield Hero.\r\n          </p>\r\n          <div className='text-2xl lg:text-3xl text-center py-6 px-8'>\r\n            Contact Me\r\n          </div>\r\n          <div className='flex px-6 pb-12 lg:px-24 justify-between'>\r\n            <a href='mailto:rstewart456@gmail.com'>\r\n              <Icon path={mdiEmail} title='Email' size={3} />\r\n            </a>\r\n            <a href='https://linkedin.com/in/ronald-stewart-6544808b'>\r\n              <Icon path={mdiLinkedin} title='Linkedin' size={3} />\r\n            </a>\r\n            <a href='https://github.com/rstewart456'>\r\n              <Icon path={mdiGithub} title='Github' size={3} />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","import React, {Fragment} from 'react'\r\nimport spinner from '../assets/image/spinner.gif'\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n        src={spinner}\r\n        style={{ width: '200px' }}\r\n        alt='Loading...'\r\n        />\r\n    </Fragment>\r\n)\r\n","import React, { useState } from 'react'\r\nimport './livedemo.css'\r\nimport { Icon } from '@mdi/react'\r\nimport Spinner from './spinner'\r\nimport { mdiCloseCircleOutline } from '@mdi/js'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LiveDemo = ({projects}) => {\r\n    const [spinner, setSpinner] = useState(true)\r\n\r\n    const Load = () => {\r\n      setSpinner(false)\r\n    }\r\n\r\n    const history = useHistory()\r\n\r\n    const {pid} = useParams()\r\n\r\n    const projid = projects.find(({id}) => id === pid)\r\n\r\n    const proj = {...projid}\r\n\r\n    const goBack = () => {\r\n        history.push('/projects')\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {spinner ? (<div className='flex h-screen flex-col justify-center items-center'><Spinner /></div>) : null}\r\n        <div id='parent' className='relative h-screen w-screen overflow-hidden'>\r\n          <iframe\r\n            onLoad={() => Load()}\r\n            className='h-screen w-full'\r\n            title='projects'\r\n            src={proj.location}\r\n          />\r\n          <button>\r\n            <Icon\r\n              className='text-red-900'\r\n              path={mdiCloseCircleOutline}\r\n              title='Close LiveDemo'\r\n              size={2}\r\n              onClick={() => goBack()}\r\n            ></Icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nLiveDemo.propTypes = {\r\nprojects: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    projects: state.projects.project\r\n})\r\n\r\nexport default connect(mapStateToProps)(LiveDemo)\r\n","import React, { useEffect } from 'react';\nimport Nav from './components/Nav'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport { getProjects } from './actions/projects';\nimport {Route, Switch} from 'react-router-dom'\nimport Projects from './components/Projects';\nimport { Home } from './components/Home';\nimport LiveDemo from './components/livedemo'\n\n\n\nfunction App({getProjects}) {\n\n      useEffect(() => {\n        getProjects()\n        return () => getProjects()\n      }, [getProjects]);\n\n\n  return (\n    <div>\n      <Nav />\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <Route exact path='/projects'>\n            <Projects />\n          </Route>\n          <Route exact path='/liveDemo/:pid'>\n            <LiveDemo />\n          </Route>\n        </Switch>\n    </div>\n  );\n}\n\nApp.propTypes = {\n  getProjects: PropTypes.func.isRequired,\n}\n\nexport default connect(null, {getProjects})(App);\n","import { GET_PROJECTS } from './types'\r\nimport { db } from '../firestore'\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    try {\r\n        const subscribe = await db.collection('projects').orderBy('level').get()\r\n        const data = subscribe.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }))\r\n        const rdata = data.reverse()\r\n\r\n        dispatch({\r\n            type: GET_PROJECTS,\r\n            payload: rdata\r\n        }) \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n}\r\n","export const GET_PROJECTS = 'GET_PROJECTS'\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_PROJECTS } from '../actions/types'\r\n\r\nconst initialState = {\r\n    project: [],\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                project: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport projects from './projects'\r\n\r\nexport default combineReducers({\r\n    projects\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)), \r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport {HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename='/'>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}